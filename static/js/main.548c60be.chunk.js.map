{"version":3,"sources":["assets/logo.svg","components/header.js","components/tags.js","components/productDetails.js","components/nav.js","containers/DetailsContainer.js","components/Data/DataTable.js","containers/DataContainer.js","components/Data/Overview.js","containers/OverviewContainer.js","containers/Layout.js","actions/actions.js","api/data.js","App.js","serviceWorker.js","reducers/reducer.js","index.js"],"names":["module","exports","header","props","className","src","logo","alt","productDetails","tags","map","tag","idx","href","key","data","image","title","subtitle","nav","exact","to","activeClassName","icon","faHome","faChartBar","DetailsContainer","id","this","Component","DataTable","state","sales","sortedBy","isSortOrderAsc","headings","weekEnding","retailSales","wholesaleSales","unitsSold","retailerMargin","renderTableHeader","Object","keys","onClick","e","sortTable","toUpperCase","faCaretDown","faCaretUp","renderTable","week","formatter","Intl","NumberFormat","style","currency","currencyDisplay","format","newSales","newSortOrder","sort","b","a","parseInt","String","replace","setState","DataContainer","Overview","details","detail","reviews","review","customer","score","OverviewContainer","Layout","loading","path","render","fetchData","dispatch","Promise","resolve","setTimeout","then","type","payload","App","connect","Boolean","window","location","hostname","match","initialState","reducer","action","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.548c60be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fd5aaf6d.svg\";","import React from 'react';\r\nimport logo from '../assets/logo.svg';\r\n\r\nconst header = (props) => {\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <img src={logo} alt=\"logo\" />\r\n            <h1>Stackline</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default header;","import React from 'react';\r\n\r\nconst productDetails = (props) => {\r\n\r\n    const tags = props.tags;\r\n\r\n    return (\r\n        <div className=\"tags\">\r\n            <ul>\r\n                {tags.map((tag, idx) =>\r\n                    <a href=\"#\" key={idx}>{tag}</a>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default productDetails;","import React from 'react';\r\nimport Tags from './tags';\r\n\r\nconst productDetails = (props) => {\r\n\r\n    return (\r\n        <div className=\"product-details center\">\r\n            <img src={props.data.image} alt=\"ProductImage\" />\r\n            <div className=\"product-text center\">\r\n                <h2>{props.data.title}</h2>\r\n                <p className=\"subtitle\">{props.data.subtitle}</p>\r\n            </div>\r\n            <hr />\r\n            <Tags tags={props.data.tags} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default productDetails;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faChartBar } from '@fortawesome/free-solid-svg-icons';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst nav = (props) => {\r\n\r\n    return (\r\n        <div className=\"nav\">\r\n            <div className=\"nav-item\">\r\n                <NavLink exact to=\"/\" activeClassName=\"active\">\r\n                    <FontAwesomeIcon className=\"icon-style\" icon={faHome} />Overview\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"nav-item\">\r\n                <NavLink to=\"/sales\" activeClassName=\"active\"><FontAwesomeIcon className=\"icon-style\" icon={faChartBar} />Sales</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default nav;","import React, { Component } from 'react'\r\n\r\nimport ProductDetails from '../components/productDetails';\r\nimport Nav from '../components/nav';\r\n\r\nclass DetailsContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"details-container\" className=\"card-style\">\r\n                <ProductDetails data={this.props.data}/>\r\n                <hr />\r\n                <Nav data={this.props.data} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailsContainer;\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass DataTable extends Component {\r\n\r\n    state = {\r\n        sales: this.props.sales,\r\n        sortedBy: \"weekEnding\",\r\n        isSortOrderAsc: true, \r\n        headings: {\r\n            weekEnding: \"week ending\",\r\n            retailSales: \"retail sales\",\r\n            wholesaleSales: \"wholesale sales\",\r\n            unitsSold: \"units sold\",\r\n            retailerMargin: \"retailerMargin\"\r\n        }\r\n    }\r\n\r\n    renderTableHeader = () => {\r\n        let header = Object.keys(this.props.sales[0]);\r\n        return header.map((key, idx) => {\r\n            return  <th onClick={(e) => this.sortTable(key)} key={idx}>\r\n                        {this.state.headings[key].toUpperCase()} &nbsp;\r\n                        {this.state.isSortOrderAsc && this.state.sortedBy === key\r\n                            ? <FontAwesomeIcon className=\"icon-style\" icon={faCaretDown} />\r\n                            : <FontAwesomeIcon className=\"icon-style\" icon={faCaretUp} />}\r\n                    </th>\r\n        });\r\n    }\r\n\r\n    sortTable(key) {\r\n        let newSales = null;\r\n        let newSortOrder = null;\r\n\r\n        if(key === this.state.sortedBy && this.state.isSortOrderAsc === true){\r\n            newSales = this.state.sales.sort((b, a) => parseInt(String(a[key]).replace(/[^0-9\\.]/g, ''), 10) - parseInt(String(b[key]).replace(/[^0-9\\.]/g, ''), 10));\r\n            newSortOrder = false;\r\n        } else {\r\n            newSales = this.state.sales.sort((a, b) => parseInt(String(a[key]).replace(/[^0-9\\.]/g, ''), 10) - parseInt(String(b[key]).replace(/[^0-9\\.]/g, ''), 10));\r\n            newSortOrder = true;\r\n        }\r\n\r\n        this.setState({\r\n            sales: newSales,\r\n            sortedBy: key,\r\n            isSortOrderAsc: newSortOrder\r\n        })\r\n    }\r\n\r\n    renderTable = () =>{\r\n        return this.state.sales.map((week, idx) => {\r\n\r\n            const { weekEnding, retailSales, wholesaleSales, unitsSold, retailerMargin } = week;\r\n \r\n            const formatter = new Intl.NumberFormat('en-US', \r\n            { \r\n                style: 'currency', \r\n                currency: 'USD', \r\n                currencyDisplay: 'narrowSymbol' \r\n            })\r\n\r\n            return (\r\n                <tr key={idx}>\r\n                    <td>{weekEnding}</td>\r\n                    <td>{formatter.format(retailSales)}</td>\r\n                    <td>{formatter.format(wholesaleSales)}</td>\r\n                    <td>{unitsSold}</td>\r\n                    <td>{formatter.format(retailerMargin)}</td>\r\n                </tr>\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"data-table card-style\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>{this.renderTableHeader()}</tr>\r\n                        {this.renderTable()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default DataTable;\r\n","import React, { Component } from 'react'\r\nimport Table from '../components/Data/DataTable';\r\n\r\nclass DataContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"data-container\">\r\n                <Table sales={this.props.sales} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataContainer;\r\n","import React, { Component } from 'react';\r\n\r\nclass Overview extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"overview\">\r\n                <div className=\"details\">\r\n                    <h1>Details</h1>\r\n                    <ul>\r\n                        {this.props.data.details.map((detail, idx) =>\r\n                            <p key={idx}>{detail}</p>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                <hr />\r\n                <div className=\"details\">\r\n                    <h1>Reviews</h1>\r\n                    <ul>\r\n                        {this.props.data.reviews.map((review, idx) => {\r\n                            return (\r\n                                <div key={idx}>\r\n                                <p><b>{review.customer}</b></p>\r\n                                <p><b>Score:</b> {review.score}</p>\r\n                                <p>{review.review}</p>\r\n                                </div>\r\n                            )}\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Overview;\r\n","import React, { Component } from 'react'\r\nimport Overview from '../components/Data/Overview';\r\n\r\nclass OverviewContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"overview\" className=\"card-style\">\r\n                <Overview data={this.props.data} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default OverviewContainer;\r\n","import React, { Component } from 'react'\r\n\r\nimport Header from '../components/header';\r\nimport DetailsContainer from './DetailsContainer';\r\nimport DataContainer from './DataContainer';\r\nimport Overview from './OverviewContainer';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"layout\">\r\n                <Header />\r\n                { this.props.loading\r\n                ? null\r\n                : <main className=\"content-container\">\r\n                    <DetailsContainer data={this.props.data} />\r\n                    <Switch>\r\n                        <Route exact path=\"stackline/\" render={(props) => <Overview data={this.props.data} />} />\r\n                        <Route path=\"stackline/sales\" render={(props) => <DataContainer sales={this.props.data.sales} />} />\r\n                    </Switch>\r\n                </main>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n","import { getData } from '../api/data';\r\n\r\nexport const FETCH_DATA = 'FETCH_DATA';\r\n\r\nexport const fetchData = () => {\r\n    return dispatch => {\r\n        getData()\r\n            .then(data => {\r\n                dispatch({\r\n                    type: FETCH_DATA,\r\n                    payload: data\r\n                });\r\n            });\r\n    }\r\n};","import data from './Webdev_data2.json';\r\n\r\nexport const getData = () => \r\n  new Promise(resolve => {\r\n    setTimeout(() => resolve(data[0]), 500);\r\n  });","import React, { Component } from 'react';\nimport './style/Main.scss';\nimport Layout from './containers/Layout';\nimport { fetchData } from './actions/actions';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.props.loading \n          ? null\n          :<Layout data={this.props.data} loading={this.props.loading} />\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: () => {\n      dispatch(fetchData());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { FETCH_DATA } from '../actions/actions';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    loading: true\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport ReduxThunk from \"redux-thunk\";\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './reducers/reducer';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(ReduxThunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}